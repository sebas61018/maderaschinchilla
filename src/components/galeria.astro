---
const galeriaUno = [
  {
    title: "NN",
    description: "NN",
    imageUrl: "/assets/galeria/galeria1.jpg"
  },
  {
    title: "NN",
    description: "NN",
    imageUrl: "/assets/galeria/galeria2.jpg"
  },
  {
    title: "NN",
    description: "NN",
    imageUrl: "/assets/galeria/galeria3.jpg"
  },
  {
    title: "NN",
    description: "NN",
    imageUrl: "/assets/galeria/galeria5.jpg"
  }
];
---

<section data-gallery="galeria1" class="max-w-7xl mx-auto py-12 px-6 md:py-16 lg:py-20 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
  {galeriaUno.map((item) => (
    <div 
      class="text-center space-y-4 cursor-pointer opacity-0 translate-y-8 transition-all duration-700 ease-in-out scroll-reveal hover:scale-[1.03] hover:shadow-2xl"
      data-src={item.imageUrl}
    >
      <img 
        src={item.imageUrl} 
        alt={item.title} 
        class="object-cover rounded-xl shadow-lg h-[300px] w-full transition-transform duration-500 ease-in-out"
      />
      <h3 class="text-xl font-bold text-gray-800 uppercase">{item.title}</h3>
      <p class="text-sm text-gray-600 leading-relaxed">{item.description}</p>
    </div>
  ))}
</section>

<!-- Modal -->
<div id="modal-galeria1" class="fixed inset-0 z-50 hidden bg-black bg-opacity-80 flex items-center justify-center">
  <button data-close class="absolute top-4 right-6 text-white text-3xl font-bold">&times;</button>
  <div class="relative w-full max-w-4xl px-6">
    <img id="modalImage-galeria1" src="" alt="preview" class="rounded-lg mx-auto max-h-[80vh]" />
    <div class="flex justify-between mt-4 text-white text-2xl px-4">
      <button data-prev class="hover:text-gray-400">&larr;</button>
      <button data-next class="hover:text-gray-400">&rarr;</button>
    </div>
  </div>
</div>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const revealElements = document.querySelectorAll(".scroll-reveal");

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add("opacity-100", "translate-y-0");
          entry.target.classList.remove("opacity-0", "translate-y-8");
        }
      });
    }, { threshold: 0.1 });

    revealElements.forEach(el => observer.observe(el));

    function setupGallery(galleryName) {
      const gallery = document.querySelector(`[data-gallery="${galleryName}"]`);
      const items = Array.from(gallery.querySelectorAll('[data-src]'));
      const modal = document.getElementById(`modal-${galleryName}`);
      const modalImg = document.getElementById(`modalImage-${galleryName}`);
      let currentIndex = 0;
      const images = items.map(el => el.dataset.src);

      function openModal(index) {
        currentIndex = index;
        modalImg.src = images[currentIndex];
        modal.classList.remove('hidden');
      }

      function closeModal() {
        modal.classList.add('hidden');
      }

      function prevImage() {
        currentIndex = (currentIndex - 1 + images.length) % images.length;
        modalImg.src = images[currentIndex];
      }

      function nextImage() {
        currentIndex = (currentIndex + 1) % images.length;
        modalImg.src = images[currentIndex];
      }

      items.forEach((el, index) => {
        el.addEventListener('click', () => openModal(index));
      });

      modal.querySelector('[data-close]').addEventListener('click', closeModal);
      modal.querySelector('[data-prev]').addEventListener('click', prevImage);
      modal.querySelector('[data-next]').addEventListener('click', nextImage);
    }

    setupGallery('galeria1');
  });
</script>